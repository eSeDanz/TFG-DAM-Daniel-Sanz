/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import java.io.File;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.EventObject;
import javax.swing.DefaultCellEditor;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import modelo.ArticuloControl;
import javax.swing.table.TableRowSorter;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import modelo.Articulo;
import modelo.ContenidoControl;
import modelo.ListaContenido;
import modelo.ProveedorControl;

/**
 *
 * @author Daniel Sanz Ferrer
 */
public class VistaContenido extends javax.swing.JInternalFrame {

    private final ArticuloControl AC = new ArticuloControl();
    private final ContenidoControl CC = new ContenidoControl();
    private final ProveedorControl PROC = new ProveedorControl();
    private final DecimalFormatSymbols SYMBOLS;
    private final DecimalFormat DF;
    private Articulo art = new Articulo();
    private String referencia, descripcion, proveedor;
    private int cantidad, minimo;
    private double precio;

    /**
     * Creates new form FrmCategoria
     */
    public VistaContenido() {
        initComponents();
        SYMBOLS = new DecimalFormatSymbols();
        SYMBOLS.setDecimalSeparator('.');
        DF = new DecimalFormat("#.##", SYMBOLS);
        jTabbedPaneContenido.setEnabledAt(1, false);
        jComboBoxProveedor.setModel(PROC.seleccionar());
        listarArticulos();
        UIManager.put("FileChooser.cancelButtonText", "Cancelar");
        UIManager.put("FileChooser.cancelButtonToolTipText", "Cancelar la acción.");
        UIManager.put("OptionPane.yesButtonText", "Si");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneContenido = new javax.swing.JTabbedPane();
        jPanelContenido = new javax.swing.JPanel();
        jLabelDescripcion = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jButtonAnyadir = new javax.swing.JButton();
        jButtonModificarCantidad = new javax.swing.JButton();
        jScrollPaneArticulos = new javax.swing.JScrollPane();
        jTableArticulos = new javax.swing.JTable();
        jComboBoxProveedor = new javax.swing.JComboBox<>();
        jButtonEliminarContenido = new javax.swing.JButton();
        jTextFieldDescripcionBuscar = new javax.swing.JTextField();
        jLabelContenido = new javax.swing.JLabel();
        jScrollPaneContenido = new javax.swing.JScrollPane();
        jTableContenido = new javax.swing.JTable();
        jLabelModificarCantidad = new javax.swing.JLabel();
        jTextFieldCantidadModificar = new javax.swing.JTextField();
        jButtonExportarPDF = new javax.swing.JButton();
        jButtonEnviarCorreo = new javax.swing.JButton();
        jButtonVerPedidos = new javax.swing.JButton();
        jLabelTotalxPedido = new javax.swing.JLabel();
        jLabelTotal = new javax.swing.JLabel();
        jLabelCantidadAnyadir = new javax.swing.JLabel();
        jTextFieldCantidadAnyadir = new javax.swing.JTextField();
        jButtonVaciarContenido = new javax.swing.JButton();
        jLabelEuro1 = new javax.swing.JLabel();
        jLabelDescuentoLabel = new javax.swing.JLabel();
        jLabelDescuentoPorcentaje = new javax.swing.JLabel();
        jLabelPorcentaje = new javax.swing.JLabel();
        jLabelDescuentoEuros = new javax.swing.JLabel();
        jLabelEuro2 = new javax.swing.JLabel();
        jLabelTotalConDescuentoLabel = new javax.swing.JLabel();
        jLabelTotalConDescuento = new javax.swing.JLabel();
        jLabelEuro3 = new javax.swing.JLabel();
        jLabelIVA21 = new javax.swing.JLabel();
        jLabelIVA = new javax.swing.JLabel();
        jLabelEuro4 = new javax.swing.JLabel();
        jLabelREq5220 = new javax.swing.JLabel();
        jLabelREq = new javax.swing.JLabel();
        jLabelEuro5 = new javax.swing.JLabel();
        jLabelTotalConImpuestosLabel = new javax.swing.JLabel();
        jLabelTotalConImpuestos = new javax.swing.JLabel();
        jLabelEuro6 = new javax.swing.JLabel();
        jPanelPedidos = new javax.swing.JPanel();
        jButtonVolver = new javax.swing.JButton();
        jLabelPedidos = new javax.swing.JLabel();
        jScrollPanePedidos = new javax.swing.JScrollPane();
        jTablePedidos = new javax.swing.JTable();
        jLabelContenido2 = new javax.swing.JLabel();
        jScrollPaneContenido2 = new javax.swing.JScrollPane();
        jTableContenido2 = new javax.swing.JTable();
        jButtonRecuperarPedido = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Pedidos");

        jLabelDescripcion.setText("Descripción:");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonAnyadir.setText("Añadir al contenido");
        jButtonAnyadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnyadirActionPerformed(evt);
            }
        });

        jButtonModificarCantidad.setText("Modificar");
        jButtonModificarCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarCantidadActionPerformed(evt);
            }
        });

        jTableArticulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Referencia", "Código EAN", "Descripción", "Pedido Mínimo", "Precio", "Proveedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneArticulos.setViewportView(jTableArticulos);

        jComboBoxProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ibili", "Lifestyle", "Metaltex" }));
        jComboBoxProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProveedorActionPerformed(evt);
            }
        });

        jButtonEliminarContenido.setText("Eliminar del contenido");
        jButtonEliminarContenido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarContenidoActionPerformed(evt);
            }
        });

        jLabelContenido.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelContenido.setText("Contenido");
        jLabelContenido.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTableContenido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Referencia", "Descripción", "Precio", "Cantidad", "Total por artículo", "Proveedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneContenido.setViewportView(jTableContenido);

        jLabelModificarCantidad.setText("Modificar cantidad:");

        jButtonExportarPDF.setText("Exportar a PDF");
        jButtonExportarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportarPDFActionPerformed(evt);
            }
        });

        jButtonEnviarCorreo.setText("Enviar por correo");
        jButtonEnviarCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarCorreoActionPerformed(evt);
            }
        });

        jButtonVerPedidos.setText("Ver pedidos");
        jButtonVerPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerPedidosActionPerformed(evt);
            }
        });

        jLabelTotalxPedido.setText("Total por pedido:");

        jLabelTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelTotal.setText("0");

        jLabelCantidadAnyadir.setText("Cantidad a añadir:");

        jButtonVaciarContenido.setText("Vaciar contenido del pedido");
        jButtonVaciarContenido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVaciarContenidoActionPerformed(evt);
            }
        });

        jLabelEuro1.setText("€");

        jLabelDescuentoLabel.setText("Descuento");

        jLabelDescuentoPorcentaje.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelDescuentoPorcentaje.setText("0");

        jLabelPorcentaje.setText("%:");

        jLabelDescuentoEuros.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelDescuentoEuros.setText("0");

        jLabelEuro2.setText("€");

        jLabelTotalConDescuentoLabel.setText("Total con descuento:");

        jLabelTotalConDescuento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelTotalConDescuento.setText("0");

        jLabelEuro3.setText("€");

        jLabelIVA21.setText("IVA 21%:");

        jLabelIVA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelIVA.setText("0");

        jLabelEuro4.setText("€");

        jLabelREq5220.setText("Recargo de equivalencia 5.20%:");

        jLabelREq.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelREq.setText("0");

        jLabelEuro5.setText("€");

        jLabelTotalConImpuestosLabel.setText("Total con impuestos:");

        jLabelTotalConImpuestos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelTotalConImpuestos.setText("0");

        jLabelEuro6.setText("€");

        javax.swing.GroupLayout jPanelContenidoLayout = new javax.swing.GroupLayout(jPanelContenido);
        jPanelContenido.setLayout(jPanelContenidoLayout);
        jPanelContenidoLayout.setHorizontalGroup(
            jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContenidoLayout.createSequentialGroup()
                        .addGap(442, 442, 442)
                        .addComponent(jLabelContenido)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelContenidoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPaneArticulos)
                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                .addComponent(jLabelDescripcion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldDescripcionBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonBuscar)
                                .addGap(55, 55, 55)
                                .addComponent(jLabelCantidadAnyadir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldCantidadAnyadir, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonAnyadir))
                            .addComponent(jScrollPaneContenido)
                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                        .addComponent(jLabelModificarCantidad)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldCantidadModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonModificarCantidad))
                                    .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                                .addComponent(jLabelIVA21)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabelIVA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                                .addComponent(jLabelTotalxPedido)
                                                .addGap(5, 5, 5)
                                                .addComponent(jLabelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelEuro1)
                                            .addComponent(jLabelEuro4))))
                                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jButtonEliminarContenido)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonVaciarContenido)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                        .addComponent(jButtonExportarPDF)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonEnviarCorreo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonVerPedidos))
                                    .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                                .addComponent(jLabelREq5220)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabelREq, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                                .addComponent(jLabelDescuentoLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabelDescuentoPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabelPorcentaje)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabelDescuentoEuros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelEuro2)
                                            .addComponent(jLabelEuro5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                                .addComponent(jLabelTotalConDescuentoLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabelTotalConDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                                .addComponent(jLabelTotalConImpuestosLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabelTotalConImpuestos, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabelEuro3, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                                            .addComponent(jLabelEuro6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(29, 29, 29)))))))
                .addContainerGap())
        );
        jPanelContenidoLayout.setVerticalGroup(
            jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDescripcionBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar)
                    .addComponent(jButtonAnyadir)
                    .addComponent(jLabelDescripcion)
                    .addComponent(jLabelCantidadAnyadir)
                    .addComponent(jTextFieldCantidadAnyadir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneArticulos, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelContenido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneContenido, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelModificarCantidad)
                    .addComponent(jTextFieldCantidadModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModificarCantidad)
                    .addComponent(jButtonEliminarContenido)
                    .addComponent(jButtonExportarPDF)
                    .addComponent(jButtonEnviarCorreo)
                    .addComponent(jButtonVerPedidos)
                    .addComponent(jButtonVaciarContenido))
                .addGap(18, 18, 18)
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTotalxPedido)
                    .addComponent(jLabelTotal)
                    .addComponent(jLabelEuro1)
                    .addComponent(jLabelDescuentoLabel)
                    .addComponent(jLabelDescuentoPorcentaje)
                    .addComponent(jLabelPorcentaje)
                    .addComponent(jLabelDescuentoEuros)
                    .addComponent(jLabelEuro2)
                    .addComponent(jLabelTotalConDescuentoLabel)
                    .addComponent(jLabelTotalConDescuento)
                    .addComponent(jLabelEuro3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIVA21)
                    .addComponent(jLabelIVA)
                    .addComponent(jLabelEuro4)
                    .addComponent(jLabelREq5220)
                    .addComponent(jLabelREq)
                    .addComponent(jLabelEuro5)
                    .addComponent(jLabelTotalConImpuestosLabel)
                    .addComponent(jLabelTotalConImpuestos)
                    .addComponent(jLabelEuro6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneContenido.addTab("Contenido", jPanelContenido);

        jPanelPedidos.setEnabled(false);
        jPanelPedidos.setFocusable(false);
        jPanelPedidos.setRequestFocusEnabled(false);

        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        jLabelPedidos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelPedidos.setText("Pedidos");
        jLabelPedidos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTablePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Pedido", "Fecha", "Precio Total", "Proveedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPanePedidos.setViewportView(jTablePedidos);

        jLabelContenido2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelContenido2.setText("Contenido");
        jLabelContenido2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTableContenido2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Pedido", "Referencia", "Descripción", "Cantidad", "Total por artículo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneContenido2.setViewportView(jTableContenido2);

        jButtonRecuperarPedido.setText("Recuperar pedido");
        jButtonRecuperarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRecuperarPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPedidosLayout = new javax.swing.GroupLayout(jPanelPedidos);
        jPanelPedidos.setLayout(jPanelPedidosLayout);
        jPanelPedidosLayout.setHorizontalGroup(
            jPanelPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPedidosLayout.createSequentialGroup()
                .addGroup(jPanelPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPedidosLayout.createSequentialGroup()
                        .addGap(441, 441, 441)
                        .addComponent(jLabelContenido2)
                        .addGap(0, 435, Short.MAX_VALUE))
                    .addGroup(jPanelPedidosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPedidosLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonVolver))
                            .addComponent(jScrollPanePedidos)
                            .addComponent(jScrollPaneContenido2)))
                    .addGroup(jPanelPedidosLayout.createSequentialGroup()
                        .addGap(450, 450, 450)
                        .addComponent(jLabelPedidos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRecuperarPedido)))
                .addContainerGap())
        );
        jPanelPedidosLayout.setVerticalGroup(
            jPanelPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPedidosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPedidos)
                    .addComponent(jButtonRecuperarPedido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPanePedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelContenido2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneContenido2, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonVolver)
                .addContainerGap())
        );

        jTabbedPaneContenido.addTab("Pedidos registrados", jPanelPedidos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneContenido)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneContenido)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        listarArticulos();
        jTextFieldDescripcionBuscar.setText("");
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonModificarCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarCantidadActionPerformed
        if (jTableContenido.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione el artículo para modificar la cantidad en el contenido del pedido.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
        } else if (jTextFieldCantidadModificar.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Debes introducir una cantidad en el campo modificar cantidad, es obligatorio.", "Pedidos", JOptionPane.WARNING_MESSAGE);
        } else {
            int filaSeleccionada = jTableContenido.getSelectedRow();
            Object ref = jTableContenido.getValueAt(filaSeleccionada, 0);
            Object des = jTableContenido.getValueAt(filaSeleccionada, 1);
            Object pre = jTableContenido.getValueAt(filaSeleccionada, 2);
            Object cant = jTableContenido.getValueAt(filaSeleccionada, 3);
            Object pro = jTableContenido.getValueAt(filaSeleccionada, 5);
            this.referencia = String.valueOf(ref);
            this.descripcion = String.valueOf(des);
            this.precio = Double.valueOf(pre.toString());
            this.cantidad = Integer.valueOf(cant.toString());
            this.proveedor = String.valueOf(pro);
            if (jTextFieldCantidadModificar.getText().matches("^\\d+$")) {
                int cantidadNueva = Integer.valueOf(jTextFieldCantidadModificar.getText());
                Articulo artic = AC.getArticulo(referencia);
                if (esMultiplo(artic.getMinimo(), cantidadNueva)) {
                    this.art = new Articulo(referencia, descripcion, precio, proveedor);
                    String update = CC.actualizarCantidad(art, referencia, cantidadNueva);
                    if (update.equals("OK")) {
                        JOptionPane.showMessageDialog(null, "Cantidad actualizada de " + cantidad + " a " + cantidadNueva + " en el artículo " + des + ".", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
                        listarContenido();
                    } else {
                        JOptionPane.showMessageDialog(null, update, "Pedidos", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "La cantidad a modificar tiene que ser múltiplo del pedido mínimo para el artículo seleccionado.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Tienes que introducir un número entero positivo como cantidad a modificar.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
            }
            jTextFieldCantidadModificar.setText("");
        }
    }//GEN-LAST:event_jButtonModificarCantidadActionPerformed

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        jTextFieldDescripcionBuscar.setText("");
        jTextFieldCantidadAnyadir.setText("");
        jTextFieldCantidadModificar.setText("");
        jTabbedPaneContenido.setSelectedIndex(0);
        jTabbedPaneContenido.setEnabledAt(0, true);
        jTabbedPaneContenido.setEnabledAt(1, false);
        listarArticulos();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jButtonEliminarContenidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarContenidoActionPerformed
        if (jTableContenido.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione el registro a eliminar.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int filaSeleccionada = jTableContenido.getSelectedRow();
            Object ref = jTableContenido.getValueAt(filaSeleccionada, 0);
            String refer = String.valueOf(ref);
            Object des = jTableContenido.getValueAt(filaSeleccionada, 1);
            String descr = String.valueOf(des);
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Seguro que deseas eliminar el artículo " + descr + " del contenido del pedido?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {
                String delete = CC.eliminarContenido(refer);
                if (delete.equals("OK")) {
                    JOptionPane.showMessageDialog(null, "Artículo " + descr + " eliminado con éxito del pedido.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
                    listarContenido();
                } else {
                    JOptionPane.showMessageDialog(null, delete, "Artículos", JOptionPane.ERROR_MESSAGE);
                }
            } else if (respuesta == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "No se eliminará el artículo " + descr + ".", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonEliminarContenidoActionPerformed

    private void jButtonAnyadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnyadirActionPerformed
        if (jTableArticulos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione el artículo para añadirlo al contenido del pedido.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
        } else if (jTextFieldCantidadAnyadir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Tienes que seleccionar una cantidad de producto para añadirlo al contenido del pedido.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int filaSeleccionada = jTableArticulos.getSelectedRow();
            Object ref = jTableArticulos.getValueAt(filaSeleccionada, 0);
            Object desc = jTableArticulos.getValueAt(filaSeleccionada, 2);
            Object min = jTableArticulos.getValueAt(filaSeleccionada, 3);
            Object prec = jTableArticulos.getValueAt(filaSeleccionada, 4);
            Object pro = jTableArticulos.getValueAt(filaSeleccionada, 5);
            this.referencia = String.valueOf(ref);
            this.descripcion = String.valueOf(desc);
            this.precio = Double.valueOf(prec.toString());
            this.proveedor = String.valueOf(pro);
            this.minimo = Integer.valueOf(min.toString());
            if (jTextFieldCantidadAnyadir.getText().matches("^\\d+$")) {
                this.cantidad = Integer.valueOf(jTextFieldCantidadAnyadir.getText());
                if (CC.getListaCont().existe(referencia)) {
                    JOptionPane.showMessageDialog(null, "Ya existe un artículo con esa referencia en el pedido.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
                } else if (CC.getListaCont().getListaContenido().isEmpty()) {
                    if (!esMultiplo(minimo, cantidad)) {
                        JOptionPane.showMessageDialog(null, "La cantidad a añadir tiene que ser múltiplo del pedido mínimo para el artículo seleccionado.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        art = new Articulo(referencia, descripcion, precio, proveedor);
                        String insert = CC.insertar(art, cantidad);
                        if (insert.equals("OK")) {
                            JOptionPane.showMessageDialog(null, "Artículo " + descripcion + " insertado correctamente.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
                            listarContenido();
                        } else {
                            JOptionPane.showMessageDialog(null, insert, "Pedidos", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    if (!CC.getListaCont().getPrimerProveedor().equals(proveedor)) {
                        JOptionPane.showMessageDialog(null, "No se pueden insertar artículos de diferentes proveedores en un mismo pedido.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
                    } else if (!esMultiplo(minimo, cantidad)) {
                        JOptionPane.showMessageDialog(null, "La cantidad a añadir tiene que ser múltiplo del pedido mínimo para el artículo seleccionado.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        art = new Articulo(referencia, descripcion, precio, proveedor);
                        String insert = CC.insertar(art, cantidad);
                        if (insert.equals("OK")) {
                            JOptionPane.showMessageDialog(null, "Artículo " + descripcion + " insertado correctamente.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
                            listarContenido();
                        } else {
                            JOptionPane.showMessageDialog(null, insert, "Pedidos", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Tienes que introducir un número entero positivo como cantidad a añadir.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldCantidadModificar.setText("");
            }

        }
    }//GEN-LAST:event_jButtonAnyadirActionPerformed

    private void jComboBoxProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProveedorActionPerformed
        listarArticulos();
    }//GEN-LAST:event_jComboBoxProveedorActionPerformed

    private void jButtonVaciarContenidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVaciarContenidoActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(null, "¿Seguro que deseas vaciar todo el contenido del pedido?", "Confirmación", JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Se ha vaciado el contenido del pedido con éxito.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
            CC.getListaCont().vaciarLista();
            listarContenido();
        } else if (respuesta == JOptionPane.NO_OPTION) {
            JOptionPane.showMessageDialog(null, "No se vaciará el contenido del pedido.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonVaciarContenidoActionPerformed

    private void jButtonExportarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExportarPDFActionPerformed
        if (CC.getListaCont().getListaContenido().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No hay nada en el contenido del pedido, introduce algunos artículos antes de exportar a PDF.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
        } else {
            CC.imprimirPDF();
        }
    }//GEN-LAST:event_jButtonExportarPDFActionPerformed

    private void jButtonVerPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerPedidosActionPerformed
        jTabbedPaneContenido.setSelectedIndex(1);
        jTabbedPaneContenido.setEnabledAt(0, false);
        jTabbedPaneContenido.setEnabledAt(1, true);
        listarPedidos();
        listarContenido2();
    }//GEN-LAST:event_jButtonVerPedidosActionPerformed

    private void jButtonEnviarCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarCorreoActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Seleccionar archivo PDF");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Archivos PDF", "pdf"));
        fileChooser.setApproveButtonText("Enviar por correo");
        fileChooser.setApproveButtonToolTipText("Selecciona el archivo PDF que se enviará al proveedor correspondiente.");
        int resultado = fileChooser.showOpenDialog(null);
        if (resultado != JFileChooser.APPROVE_OPTION) {
            return;
        }
        File archivoAdjunto = fileChooser.getSelectedFile();
        String enviar = CC.enviarPorCorreo(archivoAdjunto);
        if (enviar.equals("OK")) {
            JOptionPane.showMessageDialog(null, "El correo electrónico fue enviado con éxito.", "Correo electrónico", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, enviar, "Correo electrónico", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEnviarCorreoActionPerformed

    private void jButtonRecuperarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRecuperarPedidoActionPerformed
        if (jTablePedidos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un pedido para recuperarlo.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int filaSeleccionada = jTablePedidos.getSelectedRow();
            Object idPedido = jTablePedidos.getValueAt(filaSeleccionada, 0);
            Object prove = jTablePedidos.getValueAt(filaSeleccionada, 3);
            String idPed = String.valueOf(idPedido);
            String pro = String.valueOf(prove);
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Seguro que deseas recuperar el pedido " + idPed + " de " + pro + "?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {
                jTableContenido.setModel(CC.recuperarContenido(Integer.valueOf(idPed), pro));
                JOptionPane.showMessageDialog(null, "Recuperación del pedido " + idPed + " de " + pro + " realizada con éxito.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
                listarContenido();
                jTabbedPaneContenido.setSelectedIndex(0);
                jTabbedPaneContenido.setEnabledAt(0, true);
                jTabbedPaneContenido.setEnabledAt(1, false);
            } else if (respuesta == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "No se recuperará el pedido.", "Pedidos", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonRecuperarPedidoActionPerformed

    public void vaciarCampos() {
        jTextFieldDescripcionBuscar.setText("");
        jTextFieldCantidadAnyadir.setText("");
        jTextFieldCantidadModificar.setText("");
        jComboBoxProveedor.setModel(PROC.seleccionar());
    }

    private void listarArticulos() {
        String nombre = jTextFieldDescripcionBuscar.getText();
        String pro = jComboBoxProveedor.getSelectedItem().toString();
        jTableArticulos.setModel(AC.listar(nombre, pro));
        jTableArticulos.setDefaultEditor(Object.class, new DefaultCellEditor(new JTextField()) {
            @Override
            public boolean isCellEditable(EventObject e) {
                return false;
            }
        });
        TableRowSorter orden = new TableRowSorter(jTableArticulos.getModel());
        jTableArticulos.setRowSorter(orden);
    }

    private void listarContenido() {
        if (CC.getListaCont().getListaContenido().isEmpty()) {
            jLabelDescuentoPorcentaje.setText("0");
        } else {
            if (CC.getListaCont().getPrimerProveedor().equals("Ibili")) {
                jLabelDescuentoPorcentaje.setText("35");
            } else if (CC.getListaCont().getPrimerProveedor().equals("LifeStyle")) {
                jLabelDescuentoPorcentaje.setText("17.35");
            } else {
                jLabelDescuentoPorcentaje.setText("40");
            }
        }
        jTableContenido.setModel(CC.listarContenido());
        jTableContenido.setDefaultEditor(Object.class, new DefaultCellEditor(new JTextField()) {
            @Override
            public boolean isCellEditable(EventObject e) {
                return false;
            }
        });
        TableRowSorter orden = new TableRowSorter(jTableContenido.getModel());
        jTableContenido.setRowSorter(orden);
        ListaContenido lista = CC.getListaCont();
        jLabelTotal.setText(String.valueOf(lista.totalxlista()));
        double total = Double.valueOf(jLabelTotal.getText());
        double descuento = lista.descuento(total);
        jLabelDescuentoEuros.setText(String.valueOf(DF.format(descuento)));
        double totalConDescuento = Double.valueOf(DF.format(Double.valueOf(jLabelTotal.getText()) - Double.valueOf(jLabelDescuentoEuros.getText())));
        jLabelTotalConDescuento.setText(String.valueOf(totalConDescuento));
        double IVA = lista.IVA(totalConDescuento);
        jLabelIVA.setText(String.valueOf(IVA));
        double rEq = lista.recargoEquivalencia(totalConDescuento);
        jLabelREq.setText(String.valueOf(rEq));
        double totalConImpuestos = Double.valueOf(DF.format(totalConDescuento + IVA + rEq));
        jLabelTotalConImpuestos.setText(String.valueOf(totalConImpuestos));
    }

    private void listarPedidos() {
        jTablePedidos.setModel(CC.listarPedidos());
        jTablePedidos.setDefaultEditor(Object.class, new DefaultCellEditor(new JTextField()) {
            @Override
            public boolean isCellEditable(EventObject e) {
                return false;
            }
        });
        TableRowSorter orden = new TableRowSorter(jTablePedidos.getModel());
        jTablePedidos.setRowSorter(orden);
    }

    private void listarContenido2() {
        jTableContenido2.setModel(CC.listarContenido2());
        jTableContenido2.setDefaultEditor(Object.class, new DefaultCellEditor(new JTextField()) {
            @Override
            public boolean isCellEditable(EventObject e) {
                return false;
            }
        });
        TableRowSorter orden = new TableRowSorter(jTableContenido2.getModel());
        jTableContenido2.setRowSorter(orden);
    }

    public static boolean esMultiplo(int minimo, int multiplo) {
        return multiplo % minimo == 0;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnyadir;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminarContenido;
    private javax.swing.JButton jButtonEnviarCorreo;
    private javax.swing.JButton jButtonExportarPDF;
    private javax.swing.JButton jButtonModificarCantidad;
    private javax.swing.JButton jButtonRecuperarPedido;
    private javax.swing.JButton jButtonVaciarContenido;
    private javax.swing.JButton jButtonVerPedidos;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JComboBox<String> jComboBoxProveedor;
    private javax.swing.JLabel jLabelCantidadAnyadir;
    private javax.swing.JLabel jLabelContenido;
    private javax.swing.JLabel jLabelContenido2;
    private javax.swing.JLabel jLabelDescripcion;
    private javax.swing.JLabel jLabelDescuentoEuros;
    private javax.swing.JLabel jLabelDescuentoLabel;
    private javax.swing.JLabel jLabelDescuentoPorcentaje;
    private javax.swing.JLabel jLabelEuro1;
    private javax.swing.JLabel jLabelEuro2;
    private javax.swing.JLabel jLabelEuro3;
    private javax.swing.JLabel jLabelEuro4;
    private javax.swing.JLabel jLabelEuro5;
    private javax.swing.JLabel jLabelEuro6;
    private javax.swing.JLabel jLabelIVA;
    private javax.swing.JLabel jLabelIVA21;
    private javax.swing.JLabel jLabelModificarCantidad;
    private javax.swing.JLabel jLabelPedidos;
    private javax.swing.JLabel jLabelPorcentaje;
    private javax.swing.JLabel jLabelREq;
    private javax.swing.JLabel jLabelREq5220;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JLabel jLabelTotalConDescuento;
    private javax.swing.JLabel jLabelTotalConDescuentoLabel;
    private javax.swing.JLabel jLabelTotalConImpuestos;
    private javax.swing.JLabel jLabelTotalConImpuestosLabel;
    private javax.swing.JLabel jLabelTotalxPedido;
    private javax.swing.JPanel jPanelContenido;
    private javax.swing.JPanel jPanelPedidos;
    private javax.swing.JScrollPane jScrollPaneArticulos;
    private javax.swing.JScrollPane jScrollPaneContenido;
    private javax.swing.JScrollPane jScrollPaneContenido2;
    private javax.swing.JScrollPane jScrollPanePedidos;
    private javax.swing.JTabbedPane jTabbedPaneContenido;
    private javax.swing.JTable jTableArticulos;
    private javax.swing.JTable jTableContenido;
    private javax.swing.JTable jTableContenido2;
    private javax.swing.JTable jTablePedidos;
    private javax.swing.JTextField jTextFieldCantidadAnyadir;
    private javax.swing.JTextField jTextFieldCantidadModificar;
    private javax.swing.JTextField jTextFieldDescripcionBuscar;
    // End of variables declaration//GEN-END:variables
}
